// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/book.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace MyProto {
  public static partial class GrpcBook
  {
    static readonly string __ServiceName = "GrpcBook";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::MyProto.Empty> __Marshaller_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyProto.Empty.Parser));
    static readonly grpc::Marshaller<global::MyProto.BookList> __Marshaller_BookList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyProto.BookList.Parser));
    static readonly grpc::Marshaller<global::MyProto.IDRequest> __Marshaller_IDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyProto.IDRequest.Parser));
    static readonly grpc::Marshaller<global::MyProto.Book> __Marshaller_Book = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyProto.Book.Parser));
    static readonly grpc::Marshaller<global::MyProto.CreateBookRequest> __Marshaller_CreateBookRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyProto.CreateBookRequest.Parser));
    static readonly grpc::Marshaller<global::MyProto.UpdateBookRequest> __Marshaller_UpdateBookRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyProto.UpdateBookRequest.Parser));
    static readonly grpc::Marshaller<global::MyProto.AuthorList> __Marshaller_AuthorList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MyProto.AuthorList.Parser));

    static readonly grpc::Method<global::MyProto.Empty, global::MyProto.BookList> __Method_GetAll = new grpc::Method<global::MyProto.Empty, global::MyProto.BookList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAll",
        __Marshaller_Empty,
        __Marshaller_BookList);

    static readonly grpc::Method<global::MyProto.IDRequest, global::MyProto.Book> __Method_GetBookById = new grpc::Method<global::MyProto.IDRequest, global::MyProto.Book>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBookById",
        __Marshaller_IDRequest,
        __Marshaller_Book);

    static readonly grpc::Method<global::MyProto.CreateBookRequest, global::MyProto.Book> __Method_CreateBook = new grpc::Method<global::MyProto.CreateBookRequest, global::MyProto.Book>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBook",
        __Marshaller_CreateBookRequest,
        __Marshaller_Book);

    static readonly grpc::Method<global::MyProto.UpdateBookRequest, global::MyProto.Book> __Method_UpdateBook = new grpc::Method<global::MyProto.UpdateBookRequest, global::MyProto.Book>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateBook",
        __Marshaller_UpdateBookRequest,
        __Marshaller_Book);

    static readonly grpc::Method<global::MyProto.IDRequest, global::MyProto.Empty> __Method_DeleteBook = new grpc::Method<global::MyProto.IDRequest, global::MyProto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteBook",
        __Marshaller_IDRequest,
        __Marshaller_Empty);

    static readonly grpc::Method<global::MyProto.Empty, global::MyProto.AuthorList> __Method_GetAllAuthor = new grpc::Method<global::MyProto.Empty, global::MyProto.AuthorList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllAuthor",
        __Marshaller_Empty,
        __Marshaller_AuthorList);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::MyProto.BookReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GrpcBook</summary>
    [grpc::BindServiceMethod(typeof(GrpcBook), "BindService")]
    public abstract partial class GrpcBookBase
    {
      public virtual global::System.Threading.Tasks.Task<global::MyProto.BookList> GetAll(global::MyProto.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MyProto.Book> GetBookById(global::MyProto.IDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MyProto.Book> CreateBook(global::MyProto.CreateBookRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MyProto.Book> UpdateBook(global::MyProto.UpdateBookRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Define the DeleteBook method
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::MyProto.Empty> DeleteBook(global::MyProto.IDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MyProto.AuthorList> GetAllAuthor(global::MyProto.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GrpcBookBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAll, serviceImpl.GetAll)
          .AddMethod(__Method_GetBookById, serviceImpl.GetBookById)
          .AddMethod(__Method_CreateBook, serviceImpl.CreateBook)
          .AddMethod(__Method_UpdateBook, serviceImpl.UpdateBook)
          .AddMethod(__Method_DeleteBook, serviceImpl.DeleteBook)
          .AddMethod(__Method_GetAllAuthor, serviceImpl.GetAllAuthor).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GrpcBookBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAll, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MyProto.Empty, global::MyProto.BookList>(serviceImpl.GetAll));
      serviceBinder.AddMethod(__Method_GetBookById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MyProto.IDRequest, global::MyProto.Book>(serviceImpl.GetBookById));
      serviceBinder.AddMethod(__Method_CreateBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MyProto.CreateBookRequest, global::MyProto.Book>(serviceImpl.CreateBook));
      serviceBinder.AddMethod(__Method_UpdateBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MyProto.UpdateBookRequest, global::MyProto.Book>(serviceImpl.UpdateBook));
      serviceBinder.AddMethod(__Method_DeleteBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MyProto.IDRequest, global::MyProto.Empty>(serviceImpl.DeleteBook));
      serviceBinder.AddMethod(__Method_GetAllAuthor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MyProto.Empty, global::MyProto.AuthorList>(serviceImpl.GetAllAuthor));
    }

  }
}
#endregion
